
input
{
  file 
    {
    
        path => "/var/log/src_uwsgi.log"
        start_position => beginning 
        type => "wsgi_panel"
        ignore_older => 0
      sincedb_path => "/dev/null"

}

file 
    {
    
        path =>"/var/log/reporting_access_log"
        start_position => beginning 
        type => "nginx_panel"
        ignore_older => 0
      sincedb_path => "/dev/null"  
  }

}
 
filter 
{

    if [type] == "nginx_panel"
{
  
          grok {
                
                match => { "message" => "%{IPORHOST:remote_addr} - %{USERNAME:remote_user} \[%{HTTPDATE:time_local}\] %{QS:request} %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent}" }
              }
    date {
          match => [ "time_local" , "dd/MMM/YYYY:HH:mm:ss Z" ]
        }
}

  if [type] == "wsgi_panel"
  {
      if ([message] =~ "\bgenerated\b" )
          {
            grok 
            {
            match => { "message" => "\[pid: %{NUMBER}\|app: %{NUMBER}\|req: %{NUMBER}/%{NUMBER}\] %{IP} \(\) \{%{NUMBER} vars in %{NUMBER} bytes\} %{SYSLOG5424SD:DATE} %{WORD:method} %{URIPATHPARAM:end_point} \=\> generated %{NUMBER} bytes in %{NUMBER} msecs \(HTTP/%{NUMBER} %{NUMBER:status}\) %{NUMBER} headers in %{NUMBER}" }
          }
            
            date {
                  match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
                  }
  }

  else
    {
      drop{}
    }
  
  }
}
 

  output 
    {
     redis {
host => ""

data_type => "list"
key => "logstash"
}
    }